apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: springboot-build
on:
  push:
    branches:
      - "**"
jobs:
  build:
    steps:
      - uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - uses: cloudbees-io/checkout@v1
        name: checkout
      - uses: docker://maven:3.9.5-eclipse-temurin-17-alpine
        name: mvn
        kind: build
        shell: bash
        run: "mvn clean install "
      - uses: cloudbees-io/sonarqube-bundled-sast-scan-code@v1
        name: Scan with SonarQube bundled action
        env:
          SONAR_SCANNER_OPTS: sonar.java.binaries=target/classes
      - uses: cloudbees-io/configure-oci-credentials@v1
        name: Set up Docker Hub registry
        with:
          registry: index.docker.io
          username: ${{ vars.ACATERNBERG_DOCKER_USERNAME }}
          password: ${{ secrets.ACATERNBERG_DOCKER_PW }}
      - uses: cloudbees-io/kaniko@v1
        name: Push image to registry
        with:
          destination: ${{ vars.ACATERNBERG_DOCKER_USERNAME }}/cb-saas-spring-boot:latest
      - uses: cloudbees-io/helm-package@v1
        name: Package Helm chart
        with:
          chart: ./helm
          destination: ./
          version: 0.0.1
          app-version: 0.0.1
          verify: "false"
          sign: "false"
          sign-key: mykeyname
      - uses: docker://maven:3.9.5-eclipse-temurin-17-alpine
        name: hello
        id: compute-version
        run: echo hello123 > $CLOUDBEES_OUTPUTS/version
        shell: bash
    outputs:
      version: ${{steps.compute-version.outputs.version}}
  deploy:
    steps:
      - uses: docker://golang:1.20
        name: showversion
        run: 'echo version to deploy: ${{needs.build.outputs.version}}'
        shell: sh
    needs:
      - build